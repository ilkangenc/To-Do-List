{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setinputText","todos","setTodos","inputText","setStatus","filteredTodos","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","saveLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a30b6e4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({setinputText,todos,setTodos, inputText,setStatus,filteredTodos}) => {\r\n    const inputTextHandler =(e)=> {\r\n        console.log(e.target.value)\r\n        setinputText(e.target.value);\r\n    };\r\n    const submitTodoHandler =(e)=>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text:inputText,completed:false,id:Math.random() * 1000}\r\n        ]);\r\n        setinputText(\"\");\r\n    };\r\n    const statusHandler =(e) => {\r\n        console.log(e.target.value);\r\n        setStatus(e.target.value);\r\n      \r\n    }\r\n    return(\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text,todos,todo,setTodos}) => {\r\n\r\n    const deleteHandler =() =>{\r\n        setTodos(todos.filter(el => el.id !== todo.id ))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item,completed:!item.completed\r\n                }\r\n            }\r\n            return item;\r\n        })\r\n        )}\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\": \"\"}`}>{text}</li>\r\n            <button onClick ={completeHandler} className=\"complete-btn\">\r\n            <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler}  className=\"trash-btn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","\r\nimport React from 'react';\r\nimport Todo from './Todo.js'\r\nconst TodoList = ({todos,setTodos,filteredTodos}) => {\r\n\r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {filteredTodos.map((todo) => (\r\n                <Todo \r\n                setTodos={setTodos} \r\n                todos ={todos} \r\n                todo ={todo}\r\n                key = {todo.id} \r\n                text = {todo.text}/>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList;","import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  \n  const [inputText,setinputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos,setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  },[]);\n\n  useEffect(() => {\n    saveLocalTodos();\n    filterHandler();   \n  },[todos,status])\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter((todo)=> todo.completed ===true));\n        break;\n        case 'uncompleted':\n        setFilteredTodos(todos.filter((todo)=> todo.completed ===false));\n        break;\n        default:\n          setFilteredTodos(todos);\n    }\n  }\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\",JSON.stringify(todos));\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n      inputText ={inputText} \n      todos={todos} \n      setTodos={setTodos} \n      setinputText= {setinputText}\n      setStatus = {setStatus}\n     \n      />\n      <TodoList  filteredTodos = {filteredTodos} setTodos={setTodos} todos ={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}